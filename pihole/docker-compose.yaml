version: '3'

services:
  cloudflared:
    image: docker.io/visibilityspots/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    networks:
      pihole-isolated:
        ipv4_address: 10.89.1.4
    ports:
      - "5053:5053/tcp"
      - "5053:5053/udp"
    environment:
      TZ: Asia/Jakarta
      PORT: 5053
    labels:
      - traefik.enable=false

  pihole:
    image: docker.io/pihole/pihole:latest
    container_name: pihole
    restart: unless-stopped
    networks:
      - pihole-isolated
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "80:80/tcp"
    links:
      - cloudflared
    depends_on:
      - cloudflared
    environment:
      TZ: Asia/Jakarta
      FTLCONF_webserver_api_password: 'zY!V8y7hAtePLp'
      # If using Docker's default `bridge` network setting the dns listening mode should be set to 'all'
      FTLCONF_dns_listeningMode: 'all'
    volumes:
      - './pihole/:/etc/pihole/'
      - './dnsmasq.d/:/etc/dnsmasq.d/'
    labels:
      - traefik.enable=true
      - traefik.http.routers.pihole.tls=true
      - traefik.http.routers.pihole.tls.certresolver=lets-encrypt
      - traefik.http.routers.pihole.rule=Host(`hole.sayaingin.top`)
      - traefik.http.routers.pihole.service=pihole
      - traefik.http.services.pihole.loadbalancer.server.port=80
      # 53 UDP
      - traefik.udp.routers.pihole-dns-udp.entrypoints=dns-udp
      - traefik.udp.routers.pihole-dns-udp.service=pihole-dns-udp
      - traefik.udp.services.pihole-dns-udp.loadbalancer.server.port=53
      # 53/tcp
      - traefik.tcp.routers.pihole-dns-tcp.rule=HostSNI(`*`)
      - traefik.tcp.routers.pihole-dns-tcp.entrypoints=dns-tcp
      - traefik.tcp.routers.pihole-dns-tcp.service=pihole-dns-tcp
      - traefik.tcp.services.pihole-dns-tcp.loadbalancer.server.port=53

networks:
  pihole-isolated:
    ipam:
      driver: default
      config:
        - subnet: "10.89.1.0/24"
